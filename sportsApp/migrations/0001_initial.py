# Generated by Django 4.2.16 on 2024-11-09 06:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('event_type', models.CharField(blank=True, choices=[('LEAGUE', 'League'), ('KNOCKOUT', 'Knockout'), ('FRIENDLY', 'Friendly')], max_length=20, null=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='images/events/')),
                ('event_age_limit', models.PositiveIntegerField()),
                ('is_verified', models.BooleanField(default=False)),
                ('entry_fee', models.DecimalField(decimal_places=3, max_digits=10000)),
                ('registration_start_date', models.DateField()),
                ('resistration_end_date', models.DateField()),
                ('event_start_date', models.DateField(blank=True, null=True)),
                ('event_end_date', models.DateField(blank=True, null=True)),
                ('match_duration', models.DurationField(blank=True, null=True)),
                ('default_address', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventMemberRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('short_name', models.CharField(max_length=5, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventOrganizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='images/events/')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='images/banner/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organizer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestor_name', models.CharField(max_length=100)),
                ('event_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_budget', models.DecimalField(blank=True, decimal_places=10, max_digits=10, null=True)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.event')),
            ],
        ),
        migrations.CreateModel(
            name='LatestNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField()),
                ('image', models.ImageField(upload_to='images/')),
                ('text', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_address_default', models.BooleanField(default=False)),
                ('match_date', models.DateField()),
                ('match_time', models.TimeField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('match_complete', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='sportsApp.event')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_team1', to='sportsApp.eventteam')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_team2', to='sportsApp.eventteam')),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('EVENT_REGISTRATION_PAYMENT', 'event payment'), ('TEAM_REGISTRATION_PAYMENT', 'Team Registration payment'), ('EVENT_MEMBER_PAYMENT', 'Event Member Payment'), ('WIN_TEAM_PAYMENT', 'Winning Team Payment'), ('PLAYER_PAYMENT', 'PLAYER PAYMENT'), ('OTHERS', 'others')], max_length=50)),
                ('transaction_uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('service_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('delivery_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('jersey_no', models.PositiveIntegerField()),
                ('age', models.PositiveIntegerField()),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('weight', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/teams/')),
                ('height', models.PositiveIntegerField()),
                ('blood_group', models.CharField(choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('AB+', 'Ab Positive'), ('AB-', 'Ab Negative'), ('O+', 'O Positive'), ('O-', 'O Negative')], max_length=25)),
                ('address', models.TextField(blank=True, null=True)),
                ('designation', models.CharField(blank=True, choices=[('GK', 'Goalkeeper'), ('RB', 'Right Back'), ('LB', 'Left Back'), ('LCB', 'Left Center Back'), ('RCB', 'Right Center Back'), ('LM', 'Left Midfielder'), ('RM', 'Right Midfielder'), ('RW', 'Right Winger'), ('LW', 'Left Winger'), ('LCF', 'Left Center Forward'), ('RCF', 'Right Center Forward')], max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecentEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('event_title', models.CharField(max_length=255)),
                ('event_description', models.TextField()),
                ('sport_type', models.CharField(choices=[('FOOTBALL', 'Football')], default='FOOTBALL', max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=1, max_length=255)),
                ('total_players', models.PositiveIntegerField(blank=True, default=10, null=True)),
                ('sports_genere', models.CharField(blank=True, choices=[('FOOTBALL', 'Football')], default='FOOTBALL', max_length=25)),
                ('short_name', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('is_organizers_team', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='images/teams/')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='images/banner/')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHERS', 'Others')], max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('total_players', models.PositiveIntegerField(default=10)),
                ('sports_genere', models.CharField(choices=[('FOOTBALL', 'Football')], default='FOOTBALL', max_length=25)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TieSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_uuid', models.CharField(max_length=255, unique=True)),
                ('product_code', models.CharField(max_length=255)),
                ('ref_id', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='sportsApp.payment')),
            ],
        ),
        migrations.CreateModel(
            name='TeamStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_match_played', models.PositiveIntegerField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='sportsApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/teams/owner/')),
                ('descrption', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_color', models.CharField(blank=True, max_length=100, null=True)),
                ('secondary_color', models.CharField(blank=True, max_length=100, null=True)),
                ('jersey_number_color', models.CharField(blank=True, max_length=100, null=True)),
                ('neckline_color', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='Substitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_emergency_substitution', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.match')),
                ('new_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_player_substitutions', to='sportsApp.player')),
                ('previous_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previous_player_substitutions', to='sportsApp.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='Sponser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sponser_type', models.CharField(choices=[('PLATFORM_SPONSERS', 'platform'), ('EVENT_SPONSERS', 'event')], max_length=25)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='images/sponsers/')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='images/sponsers/')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='sportsApp.eventorganizer')),
            ],
        ),
        migrations.CreateModel(
            name='Refree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('LEFT_TOUCH_LINE', 'Left Touch Line'), ('RIGHT_TOUCH_LINE', 'Right Touch Line'), ('MAIN', 'Main'), ('OUTSIDE', 'Outside')], max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('phone', models.CharField(max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/refree/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sportsApp.event')),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sportsApp.match')),
            ],
        ),
        migrations.CreateModel(
            name='PointTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_MATCH', 'In Match'), ('ELIMINATED', 'Eliminated')], default='PENDING', max_length=20)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMatchEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_type', models.CharField(choices=[('FREEKICK', 'FreeKick'), ('CORNER', 'Corner'), ('PENALTY', 'Penalty'), ('OFFSIDE', 'Offside'), ('INJURY', 'Injury')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.player')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team'),
        ),
        migrations.CreateModel(
            name='MatchStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team1_point', models.PositiveIntegerField(default=0)),
                ('team2_point', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sportsApp.tiesheet')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_match', to='sportsApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='MatchInterruption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interrupted_date', models.DateTimeField()),
                ('cause', models.CharField(choices=[('weather', 'Weather Conditions'), ('injury', 'Player Injury'), ('equipment', 'Equipment Failure'), ('crowd', 'Crowd Disturbance'), ('technical', 'Technical Issue'), ('other', 'Other')], max_length=50)),
                ('duration', models.DateTimeField()),
                ('resumed_date', models.DateTimeField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='low', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.match')),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('is_event_guest', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sportsApp.match')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_description', models.CharField(max_length=255)),
                ('goal_type', models.CharField(choices=[('Open Play', 'Open Play'), ('Header', 'Header'), ('Penalty Goal', 'Penalty'), ('Free-Kick Goal', 'Free Kick'), ('Own Goal', 'Own Goal'), ('Volley', 'Volley'), ('Tap-In', 'Tap In'), ('Long-Range Goal', 'Long Range'), ('Chip', 'Chip'), ('Bicycle Kick', 'Bicycle Kick')], default='Open Play', max_length=20)),
                ('goal_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='Fall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fall_type', models.CharField(choices=[('NORMAL', 'Normal'), ('RED_CARD', 'Red Card'), ('YELLOW_CARD', 'Yellow Card')], max_length=20)),
                ('fall_description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team')),
            ],
        ),
        migrations.AddField(
            model_name='eventteam',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team'),
        ),
        migrations.CreateModel(
            name='EventMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('salary', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.eventorganizer')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.eventmemberrole')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='event_organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='sportsApp.eventorganizer'),
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='images/coach/')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sportsApp.team')),
            ],
        ),
        migrations.AddConstraint(
            model_name='player',
            constraint=models.UniqueConstraint(fields=('team', 'jersey_no'), name='unique_jersey_no_per_team'),
        ),
    ]
